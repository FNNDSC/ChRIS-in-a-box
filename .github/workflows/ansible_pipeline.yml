name: ChRIS-in-a-box Playbook

on:
  push:
    branches:
      - test  # Change this to the branch you want to trigger the pipeline on

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use the latest version of Ubuntu as the runner

    steps:
      - name: Remove existing Podman from the runner
        run: |
          sudo apt-get remove -y podman
          sudo apt-get autoremove -y
          sudo rm -rf /etc/containers /var/lib/containers /var/lib/podman
        
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            btrfs-progs \
            crun \
            git \
            golang-go \
            go-md2man \
            iptables \
            libassuan-dev \
            libbtrfs-dev \
            libc6-dev \
            libdevmapper-dev \
            libglib2.0-dev \
            libgpgme-dev \
            libgpg-error-dev \
            libprotobuf-dev \
            libprotobuf-c-dev \
            libseccomp-dev \
            libselinux1-dev \
            libsystemd-dev \
            pkg-config \
            build-essential\
            libsystemd-dev\
            uidmap\
            libapparmor-dev
            
      - name: Set up Go environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
          # Specify any additional Go versions you need

      - name: Set GOPATH
        run: |
          echo "export GOPATH=~/go" >> $GITHUB_ENV

      - name: Update PATH
        run: |
          echo "export PATH=\$GOPATH/bin:\$PATH" >> $GITHUB_ENV
    
      - name: Install Make
        run: sudo apt-get install make
      
      - uses: actions/checkout@v2
        with:
          repository: containers/conmon

      - name: Set up GOCACHE
        run: export GOCACHE="$(mktemp -d)"

      - name: Build Conmon
        run: make

      - name: Install Podman
        run: sudo make podman
     
      - name: Check runc
        run: runc --version
        
      - name: Create /etc/containers directory
        run: sudo mkdir -p /etc/containers

      - name: Download registries.conf
        run: sudo curl -L -o /etc/containers/registries.conf https://src.fedoraproject.org/rpms/containers-common/raw/main/f/registries.conf

      - name: Download policy.json
        run: sudo curl -L -o /etc/containers/policy.json https://src.fedoraproject.org/rpms/containers-common/raw/main/f/default-policy.json
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
          
      - name: Build and Test
        run: |
          go clean -modcache
          go mod download
          go get -u github.com/containers/image/v5/openshift
         
      - name: Clone Podman Repository
        run: git clone https://github.com/containers/podman/
              
      - name: Change to Podman Directory & Build and Install Podman
        run: |
          cd podman
          make BUILDTAGS="systemd"
          sudo make install
        
      - name: Check Podman Version
        run: podman --version
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Use the appropriate Python version for your playbook

      - name: Install Ansible
        run: pip install ansible

      - name: Run ChRIS-in-a-box Playbook
        working-directory: podman  # Change this if the playbook is in a different path
        run: ansible-playbook minichris.yml --tags up
