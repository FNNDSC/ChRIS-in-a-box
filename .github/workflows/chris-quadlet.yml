name: Install Dependencies and Build Go
on:
  push:
    branches:
      - quadlet
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Remove existing Podman from the runner
        run: |
          sudo apt-get remove -y podman
          sudo apt-get autoremove -y
          sudo rm -rf /etc/containers /var/lib/containers /var/lib/podman
        
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            btrfs-progs \
            crun \
            git \
            golang-go \
            go-md2man \
            iptables \
            libassuan-dev \
            libbtrfs-dev \
            libc6-dev \
            libdevmapper-dev \
            libglib2.0-dev \
            libgpgme-dev \
            libgpg-error-dev \
            libprotobuf-dev \
            libprotobuf-c-dev \
            libseccomp-dev \
            libselinux1-dev \
            libsystemd-dev \
            pkg-config \
            build-essential\
            libsystemd-dev\
            uidmap\
            libapparmor-dev
            
      - name: Set up Go environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
          # Specify any additional Go versions you need

      - name: Set GOPATH
        run: |
          echo "export GOPATH=~/go" >> $GITHUB_ENV

      - name: Update PATH
        run: |
          echo "export PATH=\$GOPATH/bin:\$PATH" >> $GITHUB_ENV
    
      - name: Install Make
        run: sudo apt-get install make
      
      - uses: actions/checkout@v2
        with:
          repository: containers/conmon

      - name: Set up GOCACHE
        run: export GOCACHE="$(mktemp -d)"

      - name: Build Conmon
        run: make

      - name: Install Podman
        run: sudo make podman
     
      - name: Check runc
        run: runc --version
        
      - name: Create /etc/containers directory
        run: sudo mkdir -p /etc/containers

      - name: Download registries.conf
        run: sudo curl -L -o /etc/containers/registries.conf https://src.fedoraproject.org/rpms/containers-common/raw/main/f/registries.conf

      - name: Download policy.json
        run: sudo curl -L -o /etc/containers/policy.json https://src.fedoraproject.org/rpms/containers-common/raw/main/f/default-policy.json
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
          
      - name: Build and Test
        run: |
          go clean -modcache
          go mod download
          go get -u github.com/containers/image/v5/openshift
         
      - name: Clone Podman Repository
        run: git clone https://github.com/containers/podman/
              
      - name: Change to Podman Directory, Build and Install Podman
        run: |
          cd podman
          make BUILDTAGS="systemd"
          sudo make install
          cd bin
          ./podman --version
          sudo cp * /usr/bin/
          sudo cp * /usr/local/bin/
          
          
      - name: Check Podman Version
        run: podman --version
              
      - name: Copy Quadlet files for Chris
        run: |
          sudo mkdir -p /etc/containers/systemd
          cd /etc/containers/systemd
          sudo curl -LJO https://github.com/FNNDSC/ChRIS-in-a-box/archive/main.zip
          sudo unzip ChRIS-in-a-box-main.zip
          sudo cp -r ChRIS-in-a-box-main/quadlet/chris/* .
          sudo rm -rf ChRIS-in-a-box-main main.zip
          
      - name: List services in systemd
        run: ls -lart /etc/containers/systemd    
          
      - name: Create CNI
        run: podman network create
        
      - name: Create Chris Network
        run: podman network create systemd-chris
    
      - name: Change Directory to systemd where Quadlet files are present for Chris
        run: cd /etc/containers/systemd
          
      - name: Do a reload as quadlet files are copied for Chris
        run:  sudo systemctl daemon-reload
        
      - name: Start Database for Chris & Verify status of Db for Chris
        run: |
           sudo /usr/bin/systemctl start db
           sudo journalctl -xeu db.service
           sudo /usr/bin/systemctl status db.service
           

      - name: Start Swift for Chris
        run: sudo systemctl start swift
        
      - name: Verify status of Swift service for Chris
        run: sudo systemctl status swift 
      
      - name: Start Rabbit Mq
        run: sudo systemctl start rabbitmq
        
      - name: Verify status of RabbitMQ service for Chris
        run: sudo systemctl status rabbitmq
        
      - name: Start CUBE
        run: sudo systemctl start cube
        
      - name: Verify status of CUBE service for Chris
        run: sudo systemctl status cube
        
      - name: Start Chris UI
        run: sudo systemctl start chrisui
        
      - name: Verify status of Chris UI service for Chris
        run: sudo systemctl status chrisui
  
      - name: Start Pfcon-Pman services for Chris
        run: sudo systemctl start pfcon-pman
        
      - name: Verify status of Pfcon-Pman services for Chris
        run: sudo systemctl status pfcon-pman

      - name: Check Podan Container Status
        run: sudo podman ps -a
